[
  {
    "path": "posts/2021-04-15-recreating-the-new-york-times-wall-of-grief/",
    "title": "Recreating The New York Times Wall of Grief",
    "description": "A graphic on Sunday’s front page depicted the totality of Covid’s devastation in the USA. I recreate it using R.",
    "author": [
      {
        "name": "Avishai M Tsur",
        "url": {}
      }
    ],
    "date": "2021-04-15",
    "categories": [],
    "contents": "\r\nIntroduction\r\nIn this post, we will recreate a graphic from The New York Times published on Feb 21, 2021. In it, there is a depiction of almost 500K COVID-19 deaths in the USA alone. To be honest, when presenting a time-series it is not often a good idea to show it using this kind of visualization where dot density is conveying the information. But, in this case and context, it is part of what makes this visualization so appealing (and appalling).\r\nDuring the last year, I worked for six months in a COVID-19 ward in my hospital. We have witnessed deaths day in and day out. I also read the mortality statistics obsessively throughout the year. However, this visualization mixed the pain for each individual together with the volume of total deaths in a way that moved me and made me re-think and re-feel. Kudos to the originators.\r\nThroughout this example, we will discuss the principles and try to recreate it with some minor differences. More customization, highlighting, and fine-tuning is possible. However, we’ll focus on just some of the main properties of this visualization to keep it simple.\r\nLoad packages\r\nFirst, let’s load all relevant packages.tidyverse loads many packages used for the bread and butter of data science. For data wrangling, there are other frameworks such as data.table that can also be used.glue is a great package for concatenating (or pasting) strings together.vroom is a package that speeds-up reading CSV files.scales is used to change numbers to a comma format.knitr::kable is used to print the data frame.\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(glue)\r\nlibrary(vroom)\r\nlibrary(scales)\r\nlibrary(knitr)\r\n\r\n\r\n\r\nLoad data\r\nCOVID-19 data can be found in many places. Here, we load the data from Our World in Data mostly because it is likely to stay online also years from now.\r\n\r\n\r\ncovid <- vroom(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\r\n\r\n\r\n\r\nQuick look\r\n\r\n\r\ncovid %>% \r\n  head() %>% \r\n  select(iso_code, location, date, new_deaths, total_deaths) %>% \r\n  kable()\r\n\r\n\r\niso_code\r\nlocation\r\ndate\r\nnew_deaths\r\ntotal_deaths\r\nAFG\r\nAfghanistan\r\n2020-02-24\r\nNA\r\nNA\r\nAFG\r\nAfghanistan\r\n2020-02-25\r\nNA\r\nNA\r\nAFG\r\nAfghanistan\r\n2020-02-26\r\nNA\r\nNA\r\nAFG\r\nAfghanistan\r\n2020-02-27\r\nNA\r\nNA\r\nAFG\r\nAfghanistan\r\n2020-02-28\r\nNA\r\nNA\r\nAFG\r\nAfghanistan\r\n2020-02-29\r\nNA\r\nNA\r\n\r\nCreating our main dataset\r\nWe can see that in this dataset each row represents a day in a country. For now, we only need data for USA, and only need the date, number of new deaths, and cumulative number of deaths. The plot starts at the date of the first death. Our Y-axis is going to be days till the last date we choose. For the plot, we need to uncount the deaths so each row is an individual who died.\r\n\r\n\r\ncovid_us <- covid %>% \r\n    filter(iso_code == \"USA\") %>% \r\n    select(date, new_deaths, total_deaths) %>% \r\n    filter(total_deaths > 0) %>% \r\n    mutate(days_to_last = n() - row_number()) %>% \r\n    uncount(new_deaths)\r\n\r\n\r\n\r\nDownsampling to accelerate drafts\r\nIn the final plot, we will use all data points. But, as there are over 500K points, and plotting is slow, it quickens the process if we downsample through drafts until we our satisfied with the result. We use identity() here so we could later comment out the downsampling without errors.\r\n\r\n\r\ncovid_us_downsampled <- covid_us %>% \r\n    sample_n(1e4) %>%\r\n    arrange(date) %>%\r\n    identity()\r\n\r\n\r\n\r\nCreating our annotation dataset\r\nIn the original graphic, every milestone of 50K deaths is annotated. To replicate it here we signal every crossing of 50K deaths, and then create the text for annotation–the date and total number of deaths.\r\n\r\n\r\nbreak_points <- covid_us_downsampled %>% \r\n    mutate(deaths_50k = total_deaths %/% 5e4) %>% \r\n    group_by(deaths_50k) %>% \r\n    slice(1) %>% \r\n    ungroup() %>% \r\n    mutate(pos = 0, xmin = 0, xmax = 1,\r\n           date_text = format.Date(date, \"%b %d\"),\r\n           date_text2 = glue(\"{date_text}\\n{comma(total_deaths)}\")\r\n           )\r\n\r\n\r\n\r\nRe-creating the graphic\r\nEvery death is randomly spread across the X-axis. The value on the Y-axis relates to the date. The slight jitter on the Y-axis is to prevent stripes. In this case, annotations are just geoms created with a different dataset. Using some transperancy allows to visualize overlapping dots.\r\n\r\n\r\nplot_draft <- covid_us_downsampled %>% \r\n    mutate(pos = runif(n())) %>% \r\n    ggplot(aes(pos, days_to_last)) +\r\n    geom_jitter(size = 0.2, alpha = 0.2, width = 0, height = 0.5) +\r\n    geom_linerange(data = break_points, aes(xmin = xmin, xmax = xmax, y = days_to_last), col = \"red\") +\r\n    scale_y_continuous(breaks = break_points$days_to_last, labels = break_points$date_text2)\r\n\r\nplot_draft\r\n\r\n\r\n\r\n\r\nThe plot looks fine to begin with, but the axis titles are unneeded, the background is low-contrast, the gridlines are distracting, and the annotations are de-emphasized.\r\n\r\n\r\nplot_downsampled <- plot_draft +\r\n  theme_classic() +\r\n    theme(\r\n        axis.line = element_blank(),\r\n        axis.title = element_blank(),\r\n        axis.text.x = element_blank(),\r\n        axis.ticks = element_blank(),\r\n        axis.text.y = element_text(color = \"red\", hjust = 0, face = \"bold\")\r\n    )\r\n\r\nplot_downsampled\r\n\r\n\r\n\r\n\r\nThis one looks better. It may look a bit anemic but we should remember we only plotted 1K dots and not the whole > 500K. Now that we are happy with the plot, let us plot all of them.\r\n\r\n\r\ncovid_us_downsampled <- covid_us %>% \r\n    # sample_n(1e4) %>%\r\n    # arrange(date) %>%\r\n    identity()\r\n\r\n\r\n\r\n\r\n\r\nbreak_points <- covid_us_downsampled %>% \r\n    mutate(deaths_50k = total_deaths %/% 5e4) %>% \r\n    group_by(deaths_50k) %>% \r\n    slice(1) %>% \r\n    ungroup() %>% \r\n    mutate(pos = 0, xmin = 0, xmax = 1,\r\n           date_text = format.Date(date, \"%b %d\"),\r\n           date_text2 = glue(\"{date_text}\\n{comma(total_deaths)}\")\r\n           )\r\n\r\n\r\n\r\n\r\n\r\nplot_final <- covid_us_downsampled %>% \r\n    mutate(pos = runif(n())) %>% \r\n    ggplot(aes(pos, days_to_last)) +\r\n    geom_jitter(size = 0.2, alpha = 0.2, width = 0, height = 0.5) +\r\n    geom_linerange(data = break_points, aes(xmin = xmin, xmax = xmax, y = days_to_last), col = \"red\") +\r\n    scale_y_continuous(breaks = break_points$days_to_last, labels = break_points$date_text2) +\r\n  theme_classic() +\r\n    theme(\r\n        axis.line = element_blank(),\r\n        axis.title = element_blank(),\r\n        axis.text.x = element_blank(),\r\n        axis.ticks = element_blank(),\r\n        axis.text.y = element_text(color = \"red\", hjust = 0, face = \"bold\")\r\n    )\r\n\r\nplot_final\r\n\r\n\r\n\r\n\r\nKey learning points for me\r\nOne strong simple message can be much more moving than many informative-heavy graphs.\r\nuncount() to imitate individual observations from summaries.\r\nDownsampling to accelerate the workflow until the finishing line.\r\nidentity() to allow commenting out in pipes.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-04-15-recreating-the-new-york-times-wall-of-grief/recreating-the-new-york-times-wall-of-grief_files/figure-html5/unnamed-chunk-7-1.png",
    "last_modified": "2021-04-15T21:49:03+03:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to website",
    "description": "Welcome to my new blog, website. I hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Avishai M Tsur",
        "url": {}
      }
    ],
    "date": "2021-04-15",
    "categories": [],
    "contents": "\r\nThis is my personal website. Here, I will share thoughts and code chunks regarding health, science, and data.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-04-15T21:28:09+03:00",
    "input_file": {}
  }
]
